---
// Import required components and utilities
import Base from '../../layouts/Base.astro';
import "../../styles/guides.css";
import { getCollection, getEntry } from 'astro:content';

// Define the static paths for all guides
export async function getStaticPaths() {
  // Get all guides from the content collection
  const guides = await getCollection('guides');
  
  // Return the params for each guide
  return guides.map(guide => ({
    params: { slug: guide.slug }
  }));
}

// Get the current slug from URL params
const { slug } = Astro.params;

// Look up the guide by slug from content collection
const guide = await getEntry('guides', slug);

// Handle 404 if guide not found
if (!guide) {
  return Astro.redirect('/404');
}

// Get the rendered content
const { Content } = await guide.render();

// SEO metadata
const pageTitle = guide.data.title;
const title = `${pageTitle} â€¢ Vitamin Brand Index`;
const description = guide.data.summary;
const site = Astro.site?.href ?? 'https://vitaminbrandindex.com/';
const canonical = new URL(`/guides/${slug}/`, site).toString();
---

<Base {title} {description} {canonical}>
  <main class="guides-container">
    <header class="guide-header">
      <h1>{guide.data.title}</h1>
      <p class="lead">{guide.data.summary}</p>
    </header>

    <nav class="guide-navigation">
      <a href="/guides/" class="link">&larr; Back to Guides</a>
    </nav>

    <article class="guide-content">
      <Content />
    </article>
  </main>

  <script type="application/ld+json">
    {JSON.stringify({
      "@context": "https://schema.org",
      "@type": "Article",
      "headline": guide.data.title,
      "description": guide.data.summary,
      "url": canonical,
      "publisher": {
        "@type": "Organization",
        "name": "Vitamin Brand Index",
        "url": "https://vitaminbrandindex.com/"
      }
    })}
  </script>
</Base>

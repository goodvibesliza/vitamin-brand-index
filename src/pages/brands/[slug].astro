---
import Base from '../../layouts/base.astro';
import { getAllBrands } from '../../lib/data.js';

export async function getStaticPaths() {
  const brands = getAllBrands();
  return brands.map((b) => ({ params: { slug: b.slug } }));
}

const { slug } = Astro.params;
const brands = getAllBrands();
const brand = brands.find((b) => b.slug === slug);

if (!brand) {
  Astro.redirect('/404');
}

const pageTitle = `${brand.brand} — Brand Profile`;
const title = `${pageTitle} • Vitamin Brand Checklist`;
const description = `Quick facts, sourcing signals, and certifications for ${brand.brand}.`;
const canonical = `https://vitaminbrandindex.com/brands/${brand.slug}/`;

function fmt(v) {
  if (Array.isArray(v)) return v.join(', ');
  return v != null && v !== '' ? v : '—';
}

function fmtBool(v) {
  if (v === true) return 'Yes';
  if (v === false) return 'No';
  return '—';
}
---
/* backwards-compat certs & sources helpers  */
const certs = brand.certification ?? brand.certifications;
const sourceList = Array.isArray(brand.sources)
  ? brand.sources.map((s) => (typeof s === 'string' ? s : s?.url).trim()).filter(Boolean)
  : [];

<Base {title} {description} {canonical}>
  <main>
    <header class="page-header">
      <h1>{brand.brand}</h1>
      <p class="lead">{description}</p>
    </header>

    <article class="brand">
      <section class="card">
        <h2>Overview</h2>
        <dl class="kv">
          <dt>Parent company</dt><dd>{fmt(brand.parent_company)}</dd>
          <dt>Year founded</dt><dd>{fmt(brand.year_founded)}</dd>
          <dt>HQ</dt><dd>{fmt(brand.hq)}</dd>
        </dl>
      </section>

      <section class="card">
        <h2>Manufacturing & Sourcing</h2>
        <dl class="kv">
          <dt>Manufacturing locations</dt><dd>{fmt(brand.manufacturing_locations)}</dd>
          <dt>Ingredient philosophy</dt><dd>{fmt(brand.ingredient_philosophy)}</dd>
          <dt>Proprietary blends</dt><dd>{fmt(brand.proprietary_blends)}</dd>
          <dt>Assembled in</dt><dd>{fmt(brand.assembled_in)}</dd>
          <dt>Ingredient sourcing</dt><dd>{fmt(brand.ingredient_sourcing)}</dd>
          <dt>Self-manufactured</dt><dd>{fmtBool(brand.self_manufactured)}</dd>
          <dt>In-house testing</dt><dd>{fmtBool(brand.in_house_testing)}</dd>
          <dt>Made in USA</dt><dd>{fmtBool(brand.made_in_usa)}</dd>
          <dt>Packaging (glass/plastic)</dt><dd>{fmt(brand.glass_or_plastic)}</dd>
          <dt>Sustainability</dt><dd>{fmt(brand.sustainablity)}</dd>
        </dl>
      </section>

      <section class="card">
        <h2>Products & Certifications</h2>
        <dl class="kv">
          <dt>Top products</dt><dd>{fmt(brand.top_products)}</dd>
          <dt>Certifications</dt><dd>{fmt(certs)}</dd>
          <dt>Ownership transparency</dt><dd>{fmt(brand.ownership_transparency)}</dd>
          <dt>Product categories</dt><dd>{fmt(brand.product_categories)}</dd>
          <dt>Product types</dt><dd>{fmt(brand.product_types)}</dd>
        </dl>
      </section>

      <section class="card">
        <h2>Quality, Testing & Notices</h2>
        <dl class="kv">
          {brand.testing_qa_notes && (
            <>
              <dt>Testing / QA notes</dt><dd>{fmt(brand.testing_qa_notes)}</dd>
            </>
          )}
          <dt>Recalls / notices</dt><dd>{fmt(brand.recalls_notices)}</dd>
        </dl>
      </section>

      {(brand.verification_status || sourceList.length) && (
        <section class="card">
          <h2>Verification</h2>
          <dl class="kv">
            <dt>Status</dt><dd>{fmt(brand.verification_status)}</dd>
            <dt>Last verified</dt><dd>{fmt(brand.last_verified)}</dd>
          </dl>
          {sourceList.length > 0 && (
            <div style="margin-top:.5rem">
              <strong>Sources</strong>
              <ul class="sources">
                {sourceList.map((u) => (
                  <li><a href={u} target="_blank" rel="noopener noreferrer nofollow">{u}</a></li>
                ))}
              </ul>
            </div>
          )}
        </section>
      )}
    </article>
  </main>
</Base>
